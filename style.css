/* ====== RESET / BAZA ====== */
* {
  margin: 0;
  padding: 0;
  border: 0;
  line-height: 1.25;
  color: #fff2f0;
  font-family: 'JetBrains Mono', monospace;
}
:root{
  --bg-dark: #000424;
  --bg-darker: #000210;
  --accent: #0d6efd;
  --text: #fff2f0;
}

/* ====== TŁO: PARTICLES ====== */
#bgParticles {
  position: fixed;
  left: 0; top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 0;
  pointer-events: none;
  background: radial-gradient(160% 120% at 50% 0%, var(--bg-dark), var(--bg-darker));
}

/* ====== GŁÓWNY LAYOUT ====== */
#app{ position: relative; z-index: 1; }

.layout{
  display: grid;
  grid-template-columns: 1fr 380px;
  gap: 28px;
  align-items: start;
  width: min(1400px, 95vw);
  margin: 20px auto 40px;
}

#board-col{ min-width: 0; }
#panel-col{ min-width: 0; }

/* ====== KARTY PANELU ====== */
.panel-card{
  background: rgba(0,4,36,0.85);
  border: 2px solid var(--accent);
  border-radius: 18px;
  box-shadow: 0 0 18px rgba(13,110,253,.45);
  color: var(--text);
  padding: 14px 16px;
  margin-bottom: 16px;
}
.panel-card h3{
  margin: 0 0 10px; 
  font-size: 18px;
}

.panel-row{
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}

/* ====== TURN INDICATOR ====== */
.turn-indicator{ display:flex; align-items:center; gap:10px; font-weight:600; }
.turn-indicator .dot{
  width:14px; height:14px; border-radius:50%;
  box-shadow: 0 0 10px currentColor;
}
.turn-indicator.white .dot{ background:#fff2f0; color:#fff2f0;}
.turn-indicator.white .label{ color:#fff2f0; }
.turn-indicator.black .dot{ background:#0d6efd; color:#0d6efd;}
.turn-indicator.black .label{ color:#0d6efd; }

/* ====== LOGI RUCHÓW ====== */
.logs-wrap{ max-height: 260px; overflow:auto; }
.moves-table{ width:100%; border-collapse: collapse; font-family: 'JetBrains Mono', monospace; }
.moves-table th, .moves-table td{
  border-bottom:1px solid rgba(255,242,240,0.12);
  padding:6px 8px; font-size: 14px; text-align:left;
}
.moves-table th{ position:sticky; top:0; background:rgba(0,4,36,0.95); }

/* ====== STATUS BADGES ====== */
.badge{
  display:inline-block; font-size:13px; padding:6px 10px;
  border-radius: 999px; border:1px solid transparent; margin-right:8px;
}
.badge-ok{ background:#072a6b; border-color:#0d6efd; color:#cfe6ff; }
.badge-warn{ background:#6b3a07; border-color:#fd7e14; color:#ffe3cf; }
.badge-err{ background:#6b0707; border-color:#dc3545; color:#ffd6da; }
.badge-muted{ background:rgba(255,242,240,0.06); color:#fff2f0; border-color:rgba(255,242,240,0.18); }

/* ====== AKCJE ====== */
.btn-reset{
  width:100%; padding:10px 12px; border-radius:12px;
  background:var(--accent); color:var(--text); border:2px solid var(--accent);
  box-shadow: 0 0 12px rgba(13,110,253,.5);
  cursor:pointer; font-weight:600;
}
.btn-reset:hover{ transform: translateY(-1px); box-shadow: 0 0 18px rgba(13,110,253,.75); }

/* ====== RESPONSYWNOŚĆ ====== */
@media (max-width: 992px){
  .layout{ grid-template-columns: 1fr; }
  #panel-col{ order:2; }
  #board-col{ order:1; }
  .panel-row{ grid-template-columns: 1fr; }
}

@media (prefers-reduced-motion: reduce){
  #bgParticles{ display:none; }
}

/* ====== GAME OVER MODAL ====== */
.go-overlay {
  position: fixed;
  inset: 0;
  background: radial-gradient(120% 120% at 50% 0%, rgba(0,4,36,0.85), rgba(0,2,16,0.85));
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}
.go-overlay.active { display: flex; }

.go-modal {
  width: min(560px, 92vw);
  background: rgba(0, 4, 36, 0.85);
  border: 4px var(--accent) solid;
  border-radius: 20px;
  box-shadow: 0 0 28px var(--accent);
  color: var(--text);
  text-align: center;
  padding: 28px 24px;
  backdrop-filter: blur(3px);
  transform: translateY(12px) scale(0.98);
  opacity: 0;
  animation: go-pop 420ms cubic-bezier(.2,.9,.2,1) forwards;
}
.go-modal h3 { font-size: clamp(22px, 3.2vw, 28px); margin: 0 0 6px 0; }
.go-modal p  { opacity: .9; margin: 0 0 18px 0; font-size: clamp(15px, 2.4vw, 18px); }

.go-actions { display: flex; gap: 12px; justify-content: center; flex-wrap: wrap; }
.go-btn{
  font-size: 15px; padding: 10px 16px; border-radius: 12px; cursor: pointer;
  transition: transform .08s ease, box-shadow .2s ease, background .2s ease;
  border: 2px solid transparent;
}
.go-btn-primary{
  background: var(--accent);
  color: var(--text);
  border-color: var(--accent);
  box-shadow: 0 0 12px rgba(13,110,253,.6);
}
.go-btn-primary:hover{ transform: translateY(-1px); box-shadow: 0 0 18px rgba(13,110,253,.8); }
.go-btn-ghost{
  background: rgba(255,242,240,0.06);
  color: var(--text);
  border-color: rgba(255,242,240,0.25);
}
.go-btn-ghost:hover{ transform: translateY(-1px); background: rgba(255,242,240,0.12); }

#goConfetti {
  position: absolute; inset: 0; width: 100%; height: 100%; pointer-events: none;
}
@keyframes go-pop { to { transform: translateY(0) scale(1); opacity: 1; } }

/* =========================================================
   ===============  CAPTURED –  SEKCJA  =============
   ========================================================= */

/* siatka miniaturek */
.captured-grid{
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 8px;
  min-height: 86px;
}

/* wrapper pod miniaturą – lokalne halo zwiększające kontrast */
.captured-grid .cap-wrap{
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  background: radial-gradient(60% 60% at 50% 45%, rgba(255,242,240,.06), rgba(255,242,240,0) 70%);
  border-radius: 10px;
  padding: 2px;
}

/* miniatury */
.captured-grid img.captured-piece{
  width: 100%;
  max-width: 58px;
  user-select: none;
  pointer-events: none;
}

/* białe – delikatny neon (spójność z planszą) */
/* .captured-grid img.captured-piece.is-white{
  filter: drop-shadow(0 0 3px #fff2f0) drop-shadow(0 0 6px #0d6efd);
} */

/* czarne – realne rozjaśnienie + kontrast + neon */
.captured-grid img.captured-piece.is-black{
  filter: brightness(1.95) contrast(1.28) saturate(1.05)
          drop-shadow(0 0 3px #fff2f0) drop-shadow(0 0 6px #0d6efd) !important;
}

/* panele – neutralne tło, bez dodatkowego przyciemniania/overlay */
#captured-opponent,
#captured-player{
  background: rgba(0,4,36,0.85);
  border-radius: 12px;
}
#captured-opponent::before, #captured-opponent::after,
#captured-player::before,  #captured-player::after{
  content: none !important;
}

/* =========================
   LAYOUT & RESPONSYWNOŚĆ – NADPISANIA
   ========================= */

/* parametry layoutu */
:root{
  --panel-w: 380px; /* szerokość prawego panelu na desktopie */
  --gutter: 28px;   /* odstęp między kolumnami (jak w .layout) */
}

/* używaj var() zamiast stałej w siatce */
.layout{
  grid-template-columns: 1fr var(--panel-w);
  gap: var(--gutter);
}

/* plansza ma dokładnie tyle szerokości, ile zostaje obok panelu
   (ograniczamy też wysokością okna) */
#board-col{
  /* działa niezależnie od definicji --board-size w chessboard.css,
     bo zmienna kaskaduje i ta z #board-col ma pierwszeństwo */
  --board-size: clamp(
    360px,
    min(calc(95vw - var(--panel-w) - var(--gutter)), 82vh),
    1000px
  );
}

/* wyrównaj górę: zdejmij wewnętrzny padding wrappera planszy na desktopie */
#board-col .chessboard-wrapper,
#board-col .chessboard-wrapper-row{
  padding-top: 0 !important;
  margin-top: 0 !important;
}

/* panel i plansza zawsze kotwiczą się do górnej krawędzi siatki */
#panel-col, #board-col{ align-self: start; }

/* niech karta „Logi ruchów” itd. ładnie zawija się w jednej kolumnie
   już na średnich szerokościach */
@media (max-width: 1200px){
  :root{ --panel-w: 340px; }
}

/* na węższych desktopach jeszcze ciaśniej */
@media (max-width: 1100px){
  :root{ --panel-w: 320px; }
}

/* WIDOK MOBILE/TABLET – jedna kolumna (masz to już w pliku),
   ale podmieniamy rozmiar planszy na „ekranowy” */
@media (max-width: 992px){
  /* .layout już przełącza się na 1 kolumnę w Twoim CSS */
  #board-col{
    --board-size: min(92vw, 80vh);
  }
  /* odrobina oddechu między sekcjami */
  .panel-card{ margin-bottom: 14px; }
}

/* === LAYOUT: 2 kolumny na desktopie, równa góra === */
:root{
  --gutter: 28px;
  --panel-w: clamp(320px, 28vw, 420px); /* panel zwęża się na mniejszych, rośnie na większych */
}

.layout{
  grid-template-columns: minmax(0, 1fr) var(--panel-w);
  gap: var(--gutter);
  align-items: start; /* kotwiczymy obie kolumny do góry */
}

/* kolumny zawsze przyklejone do górnej krawędzi grida */
#board-col, #panel-col{ align-self: start; }


/* uczymy #board-col bycia kontenerem rozmiaru */
#board-col{ 
  container-type: inline-size; 
  /* domyślna wielkość planszy = ~95% szerokości tej kolumny, ale nie wyższa niż 82% wysokości okna */
  --board-size: min(95cqw, 82vh);
}

/* zdejmij zbędną poduszkę nad planszą, żeby wyrównać górę z panelem */
#board-col .chessboard-wrapper-row{ padding-top: 0; }
#board-col .chessboard-wrapper{ padding-top: 10px; }

/* plansza nadpisze to, co ma w chessboard.css: :root{ --board-size: ... }  */
/* ponieważ zmienna ustawiona na #board-col „wygrywa” kaskadą dla jego potomków */


@media (max-width: 1200px){
  :root{ --panel-w: clamp(300px, 32vw, 380px); }
}

@media (max-width: 992px){
  /* Jedna kolumna: masz to już w style.css – zostaje */
  /* Plansza = szerokość kolumny (czyli ekranu) */
  #board-col{ --board-size: min(96cqw, 84vh); }
  /* panel bez sticky na mobile */
  #panel-col{ position: static; }
}

/* Przyjemne „przyklejenie” prawego panelu na desktopie – opcjonalnie, ale pomaga w UX */
@media (min-width: 993px){
  #panel-col{ position: sticky; top: 16px; }
}


/* =========================
   LAYOUT – centrowanie i elastyczność
   ========================= */

/* Cały grid wyśrodkuj pionowo na desktopie */
@media (min-width: 992px){
  .layout{
    min-height: 100vh;        /* mamy miejsce do centrowania */
    margin: 0 auto;           /* środek w poziomie */
    padding: 20px 0 40px;     /* oddech zamiast margin-top/bottom */
    align-content: center;    /* <<< klucz: kolumny na środku wysokości */
  }
}

/* Uelastycznij szerokość prawego panelu i trzymaj 2 kolumny */
:root{
  --panel-w: clamp(320px, 30vw, 420px);
  --gutter: 28px;
}
.layout{
  grid-template-columns: minmax(0,1fr) var(--panel-w);
  gap: var(--gutter);
  align-items: start; /* kolumny kotwiczą się do góry swojej komórki */
}

/* =========================
   SZACHOWNICA – rozmiar per-kolumna (zero wychodzenia poza panel)
   ========================= */

/* Ile pikseli zajmują legendy A–H i 1–8 (po 28px z każdej strony) */
#board-col{ --labels: 56px; }

/* Szachownica skaluje się do szerokości swojej kolumny,
   uwzględniając dodatkowe 56px na legendy.
   Dodatkowo ograniczamy wysokością okna, żeby nie „przebijała” w pionie. */
#board-col{
  /* ważne: ta zmienna nadpisuje tę z chessboard.css */
  --board-size: clamp(
    320px,                                  /* sensowne minimum na desktop */
    min(calc(100% - var(--labels)), 84vh),  /* kolumna – 56px legend oraz wysokość okna */
    1100px                                  /* górne ograniczenie, opcjonalnie */
  );
}

/* Delikatne korekty odstępów wrappera, żeby górne krawędzie były równo */
#board-col .chessboard-wrapper-row{ padding-top: 0; }
#board-col .chessboard-wrapper{ padding-top: 10px; }

/* =========================
   MOBILE / TABLET – jedna kolumna,
   panel POD szachownicą 
   ========================= */
@media (max-width: 992px){
  .layout{ grid-template-columns: 1fr; }
  #panel-col{ order: 2; }  /* panel pod planszą */
  #board-col{ order: 1; }

  /* plansza używa pełnej szerokości kolumny – nadal odejmujemy legendy */
  #board-col{
    --board-size: clamp(
      260px,
      min(calc(100% - var(--labels)), 88vh),
      900px
    );
  }

  .panel-row{ grid-template-columns: 1fr; }
}

/* === DESKTOP: pełnoekranowa, nieprzewijalna scena === */
@media (min-width: 993px){
  html, body{
    height: 100%;
    overflow: clip;            /* bez scrollbara na stronie */
  }
  #app{ height: 100dvh; }

  .layout{
    height: 100%;
    min-height: 0;             /* nadpisuje wcześniejsze min-height:100vh */
    margin: 0 auto;            /* bez dodatkowych marginesów pionowych */
    padding: 10px 0 12px;      /* małe, kontrolowane odstępy */
    box-sizing: border-box;
    align-content: center;     /* opcjonalne centrowanie w pionie */
  }

  /* Plansza skaluje się do szerokości kolumny i do wysokości viewportu */
  #board-col{
    --labels: 56px;
    --ui-vspace: 64px; /* suma górnych/dolnych odstępów wrapperów itp. */
    --board-size: clamp(
      320px,
      min(calc(100% - var(--labels)), calc(100dvh - var(--ui-vspace))),
      1100px
    );
  }

  /* Zbijamy pionowe paddingi wrapperów, by nie „wychodzić” poza viewport */
  #board-col .chessboard-wrapper-row{ padding-top: 0; padding-bottom: 0; }
  #board-col .chessboard-wrapper{ padding-top: 6px; padding-bottom: 6px; }

  /* Panel mieści się w viewport – bez wpływu na scrollbar strony */
  #panel-col{
    max-height: calc(100dvh - 20px);
    overflow: hidden;          /* jeśli kiedyś treść będzie dłuższa: zmień na auto */
    position: sticky;
    top: 16px;                 /* zachowuje obecne „przyklejenie” */
  }
}

/* Mobile/Tablet – normalne przewijanie */
@media (max-width: 992px){
  html, body{ overflow: auto; }
}

/* === CAPTURED: 1 rząd = rozmiar miniatury, reszta przewijana === */
:root{
  --cap-size: 58px;          /* docelowy wymiar miniatury i wysokość rzędu (desktop) */
}

#captured-opponent .captured-grid,
#captured-player  .captured-grid{
  height: var(--cap-size) !important;      /* dokładnie jeden rząd */
  min-height: var(--cap-size) !important;
  max-height: var(--cap-size) !important;
  overflow-y: auto;                         /* scroll tylko w pionie wewnątrz siatki */
  overflow-x: hidden;
  scrollbar-gutter: stable both-edges;
}

/* rząd siatki ma ten sam wymiar co miniatura */
.captured-grid{
  grid-auto-rows: var(--cap-size) !important;
  min-height: var(--cap-size) !important;
  gap: 8px;                                 /* zostawiamy układ 4 kolumn */
}

/* wrapper wypełnia komórkę; bez dodatkowego marginesu, by "1 rząd" = rozmiar obrazka */
.captured-grid .cap-wrap{
  height: 100%;
  width: 100%;
  padding: 0;                               /* żeby wysokość rzędu = wysokość miniatury */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* miniatura w komórce ma dokładnie rozmiar rzędu */
.captured-grid img.captured-piece{
  width: var(--cap-size);
  height: var(--cap-size);
  max-width: var(--cap-size);
  max-height: var(--cap-size);
  object-fit: contain;
  user-select: none;
  pointer-events: none;
}

/* Mobile/Tablet – mniejszy 1-rzędowy placeholder */
@media (max-width: 992px){
  :root{ --cap-size: 52px; }
}
